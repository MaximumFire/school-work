@startuml NEA
'Global Styling
skinparam classAttributeIconSize 0
skinparam classFontSize 16
skinparam classFontName Trebuchet MS
skinparam classBackgroundColor #F0F8FF
skinparam classBorderColor #4682B4
skinparam classArrowColor #4682B4
skinparam wrapWidth 450
skinparam RoundCorner 20
skinparam DefaultFontName Trebuchet MS
skinparam DefaultFontSize 16

title Classes.State

class Game {
    +{field} GameState state
    +{field} List<Move> currentValidMoves
    +{field} string id
    +{field} List<Player> players
    +{field} Settings settings\
    +{field} int suggestedMoveId
    +{method} Game(Settings settings)
    +{method} Game(Game original)
    +{method} Game(properties...)
}
class GameState {
    +{field} List<List<string>> board
    +{field} bool whiteToMove
    +{field} List<Move> moveLog
    +{field} List<int> whiteKingLocation
    +{field} List<int> blackKingLocation
    +{field} bool inCheck
    +{field} List<List<int>> pins
    +{field} List<List<int>> checks
    +{field} bool checkMate
    +{field} bool staleMate
    +{field} List<int>? enPassantPossible
    +{field} CastleRights currentCastlingRight
    +{field} List<CastleRights> castleRightsLog
    +{field} int whiteTime
    +{field} int blackTime
    +{field} bool whiteTimeRunning
    +{field} bool blackTimeRunning
    +{field} bool gameOver
    +{field} int fiftyMoveCounter
    +{field} bool drawAgreed
    +{field} bool playerResigned
    +{field} bool isWhiteResignation
    +{field} List<string> drawOffers
    +{field} List<string> pauseRequests
    +{field} bool pauseAgreed
    +{method} GameState()
    +{method} GameState(GameState original)
    +{method} GameState(properties...)
}
class Move {
    +{field} int startRow
    +{field} int startCol
    +{field} int endRow
    +{field} int endCol
    +{field} string pieceMoved
    +{field} string pieceCaptured
    +{field} bool enPassant
    +{field} bool pawnPromotion
    +{field} bool isCastleMove
    +{field} int moveID
    +{method} Move(int startRow, int startCol, int endRow, int endCol, string piecemoved, string piececaptured)
    +{method} Move(Move original)
    +{method} Move(properties...)
}

Game o-- GameState
Game o-- Move
@enduml